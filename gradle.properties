org.gradle.daemon=true
org.gradle.jvmargs=-Xms128m -Xmx512m -Dfile.encoding=UTF-8 -Dconsole.encoding=UTF-8
org.gradle.configureondemand=false
# You can downgrade this for compatibility with older libGDX versions.
gdxVersion=1.12.1
lombokVersion=1.18.30

# This must match your Maven Central group if you publish there; otherwise,
# change this template to match your group ID.
GROUP=com.github.raeleus
# The name of the library, as it can be downloaded using Maven or Gradle.
POM_ARTIFACT_ID=game-jolt-api
# This version should always be updated here; it is used elsewhere.
VERSION_NAME=0.0.1-SNAPSHOT

# The name of the library; might be different from POM_ARTIFACT_ID .
POM_NAME=game-jolt-api
POM_DESCRIPTION=A library that allows the user to access the gamejolt.com API with libGDX.
# This is probably not correct for a new project; 2021 is when the template
# was first made.
POM_INCEPTION_YEAR=2021

# Just change all this to use your GitHub or other URL.
POM_URL=https://github.com/raeleus/game-jolt-api/
POM_SCM_URL=https://github.com/raeleus/game-jolt-api/
POM_SCM_CONNECTION=scm:https://raeleus@github.com/raeleus/game-jolt-api.git
POM_SCM_DEV_CONNECTION=scm:git://github.com/raeleus/game-jolt-api.git

POM_LICENCE_NAME=MIT License
POM_LICENCE_URL=https://opensource.org/licenses/mit-license.php
POM_LICENCE_DIST=repo

# Obviously, change this part of the template if you aren't Tommy Ettinger.
POM_DEVELOPER_ID=raeleus
POM_DEVELOPER_NAME=Raymond Buckley
POM_DEVELOPER_URL=https://github.com/raeleus/

# These two lines allow uploading to Maven Central, if you want.
# You can use JitPack to handle releases and never touch Maven Central, or you can
# register with Sonatype to get a Maven Central "group" that you can push to.
# Maven Central can be a lot more work, but is the more "professional" and stable
# of the two options.
SONATYPE_HOST=DEFAULT
# If releasing to Maven Central, you should set this to true during the release
# process, and typically you will want to set it back to false before you tag
# a release on GitHub. This is because Maven Central needs signed JARs, but
# JitPack can't easily sign JARs using your keys, if it just built those JARs.
RELEASE_SIGNING_ENABLED=false